function [  ] = display_sample_data(samples)
%% display sample data
disp(' ')
disp('Sample data:')
disp(['Name' char(9)...
    'Nnuclide' char(9)...
    'Concentration (a)' char(9)...
    'Pmu(0)' char(9)...
    'Z-Z0'])
for n=1:numel(samples.lat)
    string=[samples.name{n} char(9)...
        num2str(samples.isotope(n)) char(9)...
        num2str(samples.C(n)) char(177) num2str(samples.dC(n)) char(9)...
        num2str(samples.mucont.value(n)*100,4) char(177) num2str(samples.mucont.uncert(n)*100,2) '%' char(9)...
        num2str(samples.elv_above_base(n)) 'm'];
    disp(string)
end

% load constants
if exist('consts.mat', 'file') ~= 2 % create if needed
    constants
end
load('consts.mat')

disp(' ')
disp('Nuclide data:')
disp(['Name' char(9)...
    'Nuclide' char(9)...
    'Half-life (a)' char(9)...
    'Surface production rates (scaled to Ptotal)'])
for n=1:numel(samples.lat)
    P=[consts.Psp(consts.nuclides==samples.isotope(n))*(1-samples.mucont.value(n)),...
        consts.Pmu(consts.nuclides==samples.isotope(n),:)*(samples.mucont.value(n))];
    l=consts.l(consts.nuclides==samples.isotope(n));
    string=[samples.name{n} char(9)...
        num2str(samples.isotope(n)) char(9)...
        num2str(round(log(2)/l)) char(9)...
        num2str(P)];
    disp(string)
end

L=[consts.Lsp,consts.Lmu];
string=['Attenuation lengths (g/cm2)' char(9)...
        'all' char(9)...
        ' ' char(9)...
        num2str(L)];
disp(string)


end

